openapi: "3.0.0"
info:
  title: "Learn Swagger"
  description: "Segment about writing docs"
  version: "1.0.0"
  contact:
    email: rb@gmail.com
    url: "https://riteshbenjwal.dev"

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: Local  - secure
#   - url: "http://localhost:4000/api/v1"
#     description: Local Host - regular

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: Local  - secure
    variables:
      version:
        enum:
          - v1
          - v2
        default: v1
      protocol:
        enum:
          - http
          - https
        default: http

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /rc:
    get:
      tags:
        - String
      summary: returns a greet message from RC
      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: string
                example: "mystring"
        400:
          description: Bad Request

        500:
          description: Internal Server Error

  /rcobject:
    get:
      tags:
        - Object
      summary: returns an object
      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad Request

        500:
          description: Internal Server Error

  /courses:
    get:
      tags:
        - Array
      summary: returns an array
      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    price:
                      type: number
        400:
          description: Bad Request

        500:
          description: Internal Server Error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary: returns course based on request id
      parameters:
        - name: courseId
          in: path
          required: true
          default: 22
          schema:
            type: string

      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad Request

        500:
          description: Internal Server Error


  /addcourse:
    post:
      tags:
        - String
      summary: adds a new course to existing courses
      consumes: 
        - application/json
      produces:
        - application/json  
      requestBody:
        reqiured: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number

      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad Request

        500:
          description: Internal Server Error


  /coursequery:
    get:
      tags:
        - String
      summary: trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [Bangalore, Mumbai, Pune]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile, desktop]
             
      responses:
        200:
          description: A successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
        400:
          description: Bad Request

        500:
          description: Internal Server Error



  /courseupload:
    post:
      tags:
        - String
      summary: uploading images
      parameters:
        - in: header
          name: Authorization
        
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: A successful response
        
        400:
          description: Bad Request

        500:
          description: Internal Server Error
